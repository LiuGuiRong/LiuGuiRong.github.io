<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Game | OXRusher's Blog With Octopress]]></title>
  <link href="http://LiuGuiRong.github.io/blog/categories/game/atom.xml" rel="self"/>
  <link href="http://LiuGuiRong.github.io/"/>
  <updated>2013-10-18T03:53:05+00:00</updated>
  <id>http://LiuGuiRong.github.io/</id>
  <author>
    <name><![CDATA[OX RuHSER]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ClientScriptSysDesign]]></title>
    <link href="http://LiuGuiRong.github.io/blog/2013/10/18/gc-smart-ui/"/>
    <updated>2013-10-18T10:00:00+00:00</updated>
    <id>http://LiuGuiRong.github.io/blog/2013/10/18/gc-smart-ui</id>
    <content type="html"><![CDATA[<h1>概述</h1>

<p>  这部分提供对整个设计文档的概述。描述了所有数据，结构，接口和软件构件级别的设计。</p>

<h2>目标和对象</h2>

<p>  描述软件对象的所有目标。</p>

<h1>陈述范围</h1>

<p>  软件描述。主要输入，过程功能，输出的描述，不考虑详细细节。</p>

<h2>软件内容</h2>

<p>  软件被置于商业或者产品线中，讨论相关的战略问题。目的是让读者能够对“宏图”有所了解。</p>

<h2>主要系统参数</h2>

<p>  任何商务软件或者产品线都包含软件规定、设计、实现和测试的说明和规范。</p>

<h1>数据设计</h1>

<p>  描述所有数据结构包括内部变量，全局变量和临时数据结构。</p>

<h2>内部软件数据结构</h2>

<p>  描述软件内部的构件之间的数据传输的结构。 <br/>
  2.2   全局数据结构 <br/>
  描述主要部分的数据结构。 <br/>
  2.3   临时数据结构 <br/>
  为临时应用而生成的文件的描述。 <br/>
  2.4   数据库描述 <br/>
  作为应用程序的一部分，描述数据库结构。 <br/>
  3.0   结构化和构件级别设计 <br/>
  描述程序结构。 <br/>
  3.1   程序结构 <br/>
  详细描述应用程序所选定的程序结构。 <br/>
  3.1.1   结构图 <br/>
  图形化描述结构。 <br/>
  3.1.2   选择性 <br/>
  讨论其它可供考虑的结构。选定3.1.1中结构类型的原因。 <br/>
  3.2   构件描述 <br/>
  详细描述结构中的每个软件构件。 <br/>
  3.2.1   构件过程叙述(PSPEC) <br/>
  描述构件的过程。 <br/>
  3.2.2   构件接口描述 <br/>
  详细描述构件的输入和输出。 <br/>
  3.2.3   构件执行细节 <br/>
  每个构件的详细演算描述。 <br/>
  3.2.3.1   接口描述 <br/>
  3.2.3.2   演算模型(e.g.,   PDL) <br/>
  3.2.3.3   规范/限制 <br/>
  ]3.2.3.4   本地数据结构 <br/>
  3.2.3.5   在3.2.3.6设计中包含的执行结果 <br/>
  3.3   软件接口描述 <br/>
  软件对外界的接口描述 <br/>
  3.3.1机器对外接口 <br/>
  与其他机器或者设备的接口描述。 <br/>
  3.3.2系统对外接口 <br/>
  对其它系统、产品和网络的接口描述。 <br/>
  3.3.3与人的接口 <br/>
  概述软件与任何人的界面。 <br/>
  4.0   用户界面设计 <br/>
  描述软件的用户界面设计。 <br/>
  4.1   描述用户界面 <br/>
  详细描述用户界面，包括屏幕显示图标、图片或者类型。 <br/>
  4.1.1   屏幕图片 <br/>
  从用户角度描述界面。 <br/>
  4.1.2   对象和操作 <br/>
  所有屏幕对象和操作的定义。 <br/>
  4.2   界面设计规范 <br/>
  用户界面的设计和实现的规范和标准。 <br/>
  4.3   可见构件 <br/>
  实现的GUI可见构件说明。 <br/>
  4.4   UIDS描述 <br/>
  用户界面开发系统描述。 <br/>
  5.0约束、限制和系统参数 <br/>
  会影响软件的规格说明、设计和实现的特殊事件。 <br/>
  6.0测试标准 <br/>
  测试策略和预备测试用例描述。</p>

<pre><code>6.1   测试的类别   
</code></pre>

<p>  规定实施测试的类别，包括尽量详细的描述。这里是针对黑盒测试现象的描述。 <br/>
  6.2期待软件反馈 <br/>
  测试期待的结果描述。 <br/>
  6.3执行界线 <br/>
  特殊执行需要的说明。 <br/>
  6.4   重要构件确认 <br/>
  决定性构件或者需要特殊注意的构件的测试确认。 <br/>
  7.0附录 <br/>
  设计说明的补充信息。 <br/>
  7.1系统可跟踪矩阵 <br/>
  一个定期回归系统规格跟踪软件需求的矩阵。 <br/>
  7.2   产品战略 <br/>
  如果规格说明书是为一个产品设计的，描述相关的产品战略。 <br/>
  7.3   使用分析算法 <br/>
  描述所有分析活动所使用到的分析算法。 <br/>
  7.4   补充信息   (如果有需要特别说明的)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>客户端脚本引擎模块 start:3 mark:3,4-5 <a href="http://192.168.1.101/README.txt">http://192.168.1.101/README.txt</a> link source code </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="kd">local</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="kd">local</span> <span class="n">p</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class='line'><span class="nb">print</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (test.lua)</span> <a href='/downloads/code/test.lua'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="kd">local</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="kd">local</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class='line'><span class="kd">local</span> <span class="n">p</span> <span class="o">=</span> <span class="mi">3</span>
</span><span class='line'><span class="nb">print</span><span class="p">(</span><span class="n">u</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>```
* this is all</p>

<pre><code>* all
</code></pre>

<ul>
<li>buble
```</li>
</ul>


<p><code>
1. tooo
2. dasda
</code></p>

<h1>Thisis all</h1>

<h2>thisi snon all</h2>

<h3>概述</h3>

<p>在业务需求多变的情况下，剥离客户端底层系统与应用逻辑，实现逻辑层的热加载热更新，遂增加了游戏客户端脚本,本篇主要是对现有客户端逻辑和底层各自功能的阐述以及对应的剥离这些功能点粒度的探讨的设计案。</p>

<h3>test1</h3>

<p>dasdsadsa</p>

<h4>test2</h4>

<p><img src="/images/game-ai-design/fsm.png" alt="FSM" /></p>

<p>可见</p>

<!--more-->


<p><img src="http://en.wikipedia.org/wiki/Behavior_tree" alt="see" /></p>

<p><strong>行为树实现</strong></p>

<pre><code>Task = {
    update = function(args) end,
    on_enter = function(args) end,
    on_exit = function(args) end,
}
BehaviorNode = {
    nodes = {},
    status = 0,
    task = nil,
    tick = function(args)
        return task:update(args)
    end,
}
BehaviorTree = {
    object = nil,
    root = nil,
    tick = function(args)
        if root then
            root:tick(args)
        end
    end,
}
</code></pre>

<p>test 3</p>

<p>&mdash; lua code</p>

<pre><code>local behavior_node = {
    precondition = function() return true end,
    action = function()
        -- do something
    end,
}
</code></pre>

<p>关于行为树更加详细的解释见<a href="http://www.aisharing.com/archives/90">这里</a></p>

<ul>
<li><p>testtest</p>

<ol>
<li> dasdsadsa</li>
</ol>
</li>
<li><p>From &ldquo;Three Ways of Cultivating Game AI&rdquo;
 <img src="/images/game-ai-design/editor1.png" alt="BehaviorEditor1" /></p></li>
</ul>


<p><video width='640' height='320' preload='none' controls poster=''><source src='http://s3.imathis.com/video/zero-to-fancy-buttons.mp4">http://s3.imathis.com/video/zero-to-fancy-buttons.mp4</a>' ></video></p>

<p><img class="<a" src="href="http://placekitten.com/890/280">http://placekitten.com/890/280</a>">
<img class="left <a" src="href="http://placekitten.com/320/250">http://placekitten.com/320/250</a>" title="Place Kitten #2" >
<img class="right <a" src="href="http://placekitten.com/300/500">http://placekitten.com/300/500</a>" width="150" height="250" title="Place Kitten #3" >
<img class="right <a" src="href="http://placekitten.com/300/500">http://placekitten.com/300/500</a>" width="150" height="250" title="&lsquo;Place Kitten #4&rsquo; &lsquo;An image of a very cute kitten&rsquo;" ></p>

<p><img class="left" src="/images/game-ai-design/fsm.png"></p>

<p><blockquote><p></p></p><p><pre><code>    Last night I lay in bed looking up at the stars in the sky and I thought to myself, where the heck is the ceiling.<br/></code></pre></p><p><p></p><footer><strong>see more..  <a href="http://blog.oxrush.com">http://blog.oxrush.com</a>  Welcome to my life blog</strong></footer></blockquote></p>

<p><strong> my email: <a href="&#109;&#x61;&#105;&#108;&#x74;&#111;&#x3a;&#x68;&#x72;&#x6f;&#x6f;&#109;&#x6b;&#x65;&#101;&#x70;&#x65;&#114;&#x40;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#109;">&#104;&#x72;&#111;&#x6f;&#109;&#107;&#x65;&#x65;&#112;&#101;&#114;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#109;</a> </strong></p>
]]></content>
  </entry>
  
</feed>
