<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mongo | OxRusher's Blog With Octopress]]></title>
  <link href="http://LiuGuiRong.github.io/blog/categories/mongo/atom.xml" rel="self"/>
  <link href="http://LiuGuiRong.github.io/"/>
  <updated>2014-05-15T06:50:00+00:00</updated>
  <id>http://LiuGuiRong.github.io/</id>
  <author>
    <name><![CDATA[OX RuHSER]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Golang语言开发数据库导入工具]]></title>
    <link href="http://LiuGuiRong.github.io/blog/2014/05/05/golang-experience/"/>
    <updated>2014-05-05T07:02:00+00:00</updated>
    <id>http://LiuGuiRong.github.io/blog/2014/05/05/golang-experience</id>
    <content type="html"><![CDATA[<p>一直想尝试下坊间传闻的带垃圾回收的C语言：golang, 这几天由于项目需求，需要一个从mysql导入数据到mongo的工具，索性直接上了golang来开发，功能较小，2天时间搞定。下面来记录下这次开发的流程和遇到的问题</p>

<h3>安装golang</h3>

<p>基本上按照官方的手册就可以把环境搭建好。<a href="http://golang.org/doc/install#install">详见</a></p>

<h3>学习语法</h3>

<p>花了半天时间，熟悉了golang的全部语法。通过<a href="http://go-tour-zh.appspot.com/welcome/1">link</a>,便可快速入门。</p>

<h3>关于编辑器</h3>

<p>我一直用的vim编辑器，使用vundle作为管理插件工具</p>

<p>在vim设置文件中加入</p>

<hr />

<p>Bundle &lsquo;Blackrush/vim-gocode&rsquo;
Bundle &lsquo;cespare/vim-golang&rsquo;</p>

<hr />

<p>编辑环境搞定!</p>

<h3>使用配置</h3>

<p>由于需要指定安装了mysql和mongo的目标机器的信息以及权限等，需要用到配置文件, 去github找了下，这方便支持的开源项目还是比较多了，选择了一个国人项目<a href="https://github.com/widuu/goini">link</a></p>

<h3>关于接受用户输入</h3>

<p>接受用户以 table_name1,table_name2,table_name3&hellip; 的形式输入，这里使用了golang的闭包特性</p>

<p>func wait_() (names [] string) {</p>

<pre><code>//closure pre-declare
var waitting_input = func() {}
var interact = func() {}
waitting_input = func() () {
    var table_names string
    fmt.Println("Please enter the name of the table you want to import? (Separated by a comma or space)")
    _, err := fmt.Scanln(&amp;table_names)
    checkErr(err)

    if table_names == "" {
        waitting_input()
    }

    names = strings.Split(table_names, ",")

    interact()

    return
}

interact = func() {
    var determine string

    fmt.Println("You input table names: ")
    for i := 0; i &lt; len(names); i++ {
        if names[i] != "" {
            fmt.Println(i+1, names[i])
        }
    }

    fmt.Println("Are you sure import? (y or n)")
    _, err := fmt.Scanln(&amp;determine)
    checkErr(err)
    switch {
    case determine == "y":
        fmt.Println("3Q, have a good day, sir~")
    case determine == "n":
        waitting_input()
    default:
        fmt.Println("unexpected input, please input again...")
        interact()
    }
}

waitting_input()

return
</code></pre>

<p>}</p>

<h3>从mysql导出指定table的数据</h3>

<p>在访问连接mysql的时候，由于只知道得到数据的表名，而不清楚里面具体的数据和对应的类型，就需要我们对数据类型做统一处理，但是现有的go-sql-driver并不支持对数据类型的获取(比较中肯的说，go-sql-dirver提供的接口确实不够友好), google后，发现很多老外都遇到相同的问题，在stackoverflow上提出的问题基本都没有较好的解决. 后来去<a href="http://godoc.org/github.com/arnehormann/sqlinternals/mysqlinternals">link</a>，找到了合适的方式。</p>

<h3>将数据写入到mongo中</h3>

<p>基本没什么说的，直接看代码吧 <a href="https://github.com/LiuGuiRong/mygo">link</a></p>

<h3>golang真正的并发编程特性还没有接触，后续会继续尝试。</h3>
]]></content>
  </entry>
  
</feed>
